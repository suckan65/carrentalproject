openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomLogin'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomLogin'
          description: ''
  /register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
components:
  schemas:
    CustomLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    Register:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        firstName:
          type: string
          maxLength: 50
        lastName:
          type: string
          maxLength: 50
        password:
          type: string
          writeOnly: true
        confirmPassword:
          type: string
          writeOnly: true
        address:
          type: string
          maxLength: 100
        zipCode:
          type: string
          maxLength: 15
        phoneNumber:
          type: string
          pattern: ^\(\d{3}\) \d{3}-\d{4}$
          maxLength: 14
        builtIn:
          type: boolean
        roles:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
      required:
      - address
      - confirmPassword
      - email
      - firstName
      - id
      - lastName
      - password
      - phoneNumber
      - roles
      - zipCode
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
